apiVersion: v1
data:
  manifest_globals.yaml: |
    apiVersion: v1
    kind: Namespace
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        cert-manager.io/disable-validation: "true"
      name: presslabs-system
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.3.0
        helm.sh/hook: crd-install
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: accountbindings.dashboard.presslabs.com
    spec:
      group: dashboard.presslabs.com
      names:
        kind: AccountBinding
        listKind: AccountBindingList
        plural: accountbindings
        singular: accountbinding
      scope: Namespaced
      validation:
        openAPIV3Schema:
          description: AccountBinding is the Schema for the account bindings API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AccountBindingSpec defines the desired state of AccountBinding
              properties:
                userId:
                  description: The unaltered OpenID Connect subject
                  type: string
              required:
              - userId
              type: object
          type: object
      version: v1alpha1
      versions:
      - name: v1alpha1
        served: true
        storage: true
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.3.0
        helm.sh/hook: crd-install
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: invites.dashboard.presslabs.com
    spec:
      group: dashboard.presslabs.com
      names:
        kind: Invite
        listKind: InviteList
        plural: invites
        singular: invite
      scope: Namespaced
      subresources:
        status: {}
      validation:
        openAPIV3Schema:
          description: Invite is the Schema for the invites API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: InviteSpec defines the desired state of Invite
              properties:
                email:
                  description: The email of the invited user (it is recommended to encrypt
                    the string)
                  type: string
                redeemToken:
                  description: RedeemToken is the token used for verification purposes
                    when redeeming the invite. It is recommended to encrypt the string.
                  type: string
              type: object
            status:
              description: InviteStatus defines the observed state of an Invite
              properties:
                conditions:
                  description: Conditions represents the Invite resource conditions list.
                  items:
                    description: InviteCondition defines the condition struct for an Invite
                      resource
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of Invite condition.
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                userId:
                  description: UserID is the ID of the invited user
                  type: string
              type: object
          type: object
      version: v1alpha1
      versions:
      - name: v1alpha1
        served: true
        storage: true
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.3.0
        helm.sh/hook: crd-install
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: mysqldatabases.dashboard.presslabs.com
    spec:
      group: dashboard.presslabs.com
      names:
        kind: MySQLDatabase
        listKind: MySQLDatabaseList
        plural: mysqldatabases
        singular: mysqldatabase
      scope: Namespaced
      validation:
        openAPIV3Schema:
          description: MySQLDatabase is the Schema for the MySQL Database API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MySQLDatabaseSpec defines the desired state of MySQLDatabaseSpec
              properties:
                clusterRef:
                  description: ClusterRef represents a reference to the MySQL cluster.
                    This field should be immutable.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                database:
                  description: Database represents the database name which will be created.
                    This field should be immutable.
                  type: string
              required:
              - clusterRef
              - database
              type: object
            status:
              description: MySQLDatabaseStatus defines the observed state of MySQLDatabase
              properties:
                conditions:
                  description: Conditions represents the MySQLDatabase  resource conditions
                    list.
                  items:
                    description: MySQLDatabaseCondition defines the condition struct for
                      a MySQLDatabase resource
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of MySQLDatabase condition.
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      version: v1alpha1
      versions:
      - name: v1alpha1
        served: true
        storage: true
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.3.0
        helm.sh/hook: crd-install
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: mysqlusers.dashboard.presslabs.com
    spec:
      group: dashboard.presslabs.com
      names:
        kind: MySQLUser
        listKind: MySQLUserList
        plural: mysqlusers
        singular: mysqluser
      scope: Namespaced
      validation:
        openAPIV3Schema:
          description: MySQLUser is the Schema for the MySQL User API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MySQLUserSpec defines the desired state of MySQLUserSpec
              properties:
                allowedHost:
                  description: AllowedHost is the allowed host to connect from. This field
                    should be immutable.
                  type: string
                clusterRef:
                  description: ClusterRef represents a reference to the MySQL cluster.
                    This field should be immutable.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                password:
                  description: Password is the password for the user.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be a valid
                        secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  required:
                  - key
                  type: object
                permissions:
                  description: Permissions is the list of roles that user has in the specified
                    database.
                  items:
                    description: MySQLPermission defines a MySQL schema permission
                    properties:
                      permissions:
                        description: Permissions represents the permissions granted on
                          the schema/tables
                        items:
                          type: string
                        type: array
                      schema:
                        description: Schema represents the schema to which the permission
                          applies
                        type: string
                      tables:
                        description: Tables represents the tables inside the schema to
                          which the permission applies
                        items:
                          type: string
                        type: array
                    required:
                    - permissions
                    - schema
                    - tables
                    type: object
                  type: array
                user:
                  description: User is the name of the user that will be created with
                    will access the specified database. This field should be immutable.
                  type: string
              required:
              - clusterRef
              - password
              - user
              type: object
            status:
              description: MySQLUserStatus defines the observed state of MySQLUser
              properties:
                conditions:
                  description: Conditions represents the MySQLUser resource conditions
                    list.
                  items:
                    description: MySQLUserCondition defines the condition struct for a
                      MySQLUser resource
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of MySQLUser condition.
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      version: v1alpha1
      versions:
      - name: v1alpha1
        served: true
        storage: true
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.3.0
        helm.sh/hook: crd-install
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: projects.dashboard.presslabs.com
    spec:
      group: dashboard.presslabs.com
      names:
        kind: Project
        listKind: ProjectList
        plural: projects
        singular: project
      scope: Namespaced
      validation:
        openAPIV3Schema:
          description: Project is the Schema for the projects API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ProjectSpec defines the desired state of Project
              properties:
                namespace:
                  description: Name of ProjectNamespace
                  type: string
              type: object
          type: object
      version: v1alpha1
      versions:
      - name: v1alpha1
        served: true
        storage: true
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
      name: dashboard.presslabs.com:organization::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
      name: dashboard.presslabs.com:organization::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - watch
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
      name: dashboard.presslabs.com:project::member
    rules:
    - apiGroups:
      - apps
      resources:
      - statefulsets
      verbs:
      - get
      - update
    - apiGroups:
      - ""
      resources:
      - events
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - ""
      resources:
      - resourcequotas
      verbs:
      - get
      - update
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - mysqlusers
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - mysqldatabases
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - mysql.presslabs.org
      resources:
      - mysqlclusters
      verbs:
      - get
      - update
      - list
      - watch
    - apiGroups:
      - mysql.presslabs.org
      resources:
      - mysqlbackups
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - cert-manager.io
      resources:
      - certificates
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - iam.cnrm.cloud.google.com
      resources:
      - iamserviceaccounts
      verbs:
      - get
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
      name: dashboard.presslabs.com:project::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - ""
      resources:
      - events
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
      name: dashboard.presslabs.com:dashboard:superadmin
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
    - kind: Group
      name: superadmins@dashboard.presslabs.com
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:project::prometheus
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:organization::invites
    rules:
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    ---
    apiVersion: scheduling.k8s.io/v1beta1
    description: This priority class is used for Presslabs Dashboard MySQL Cluster pods.
    globalDefault: false
    kind: PriorityClass
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
      name: presslabs-dashboard-database
    value: 50000
    ---
    apiVersion: scheduling.k8s.io/v1beta1
    description: This priority class is used for Presslabs Dashboard Memcached pods.
    globalDefault: false
    kind: PriorityClass
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
      name: presslabs-dashboard-memcached
    value: 10000
    ---
    allowVolumeExpansion: true
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      labels:
        addonmanager.kubernetes.io/mode: EnsureExists
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        kubernetes.io/cluster-service: "true"
      name: ssd
    parameters:
      type: pd-ssd
    provisioner: kubernetes.io/gce-pd
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        cert-manager.io/inject-ca-from: ${namespace}/${name}-dashboard-webhook-ca
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    webhooks:
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-organization-dashboard
      failurePolicy: Fail
      name: validating-organization.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: In
          values:
          - organization
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-project-dashboard
      failurePolicy: Fail
      name: validating-project.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: In
          values:
          - project
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-site-dashboard
      failurePolicy: Fail
      name: validating-site.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
      rules:
      - apiGroups:
        - wordpress.presslabs.org
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - wordpresses
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca-issuer
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      selfSigned: {}
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      commonName: ca.dashboard.presslabs.org
      duration: 43800h
      isCA: true
      issuerRef:
        name: ${name}-dashboard-webhook-ca-issuer
      secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      ca:
        secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        chart: dashboard-0.1.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      dnsNames:
      - ${name}-dashboard-webhook
      - ${name}-dashboard-webhook.${namespace}
      - ${name}-dashboard-webhook.${namespace}.svc
      duration: 8760h
      issuerRef:
        name: ${name}-dashboard-webhook-ca
      secretName: ${name}-dashboard-webhook
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        cnrm.cloud.google.com/managed-by-kcc: "true"
        cnrm.cloud.google.com/system: "true"
        controller-tools.k8s.io: "1.0"
      name: iampolicies.iam.cnrm.cloud.google.com
    spec:
      group: iam.cnrm.cloud.google.com
      names:
        kind: IAMPolicy
        plural: iampolicies
      scope: Namespaced
      validation:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                bindings:
                  description: Optional. The list of IAM bindings.
                  items:
                    properties:
                      members:
                        description: Optional. The list of IAM users to be bound to the
                          role.
                        items:
                          pattern: ^(user|serviceAccount|group|domain):.+$
                          type: string
                        pattern: ^(user|serviceAccount|group|domain):.+$
                        type: array
                      role:
                        description: Required. The role to bind the users to.
                        pattern: ^roles/[\w\.]+$
                        type: string
                    required:
                    - role
                    type: object
                  type: array
                resourceRef:
                  description: Required. The GCP resource to set the IAM policy on.
                  oneOf:
                  - not:
                      required:
                      - external
                    required:
                    - name
                  - not:
                      anyOf:
                      - required:
                        - name
                      - required:
                        - namespace
                    required:
                    - external
                  - not:
                      anyOf:
                      - required:
                        - name
                      - required:
                        - namespace
                      - required:
                        - apiVersion
                      - required:
                        - external
                  properties:
                    apiVersion:
                      type: string
                    external:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - kind
                  type: object
              required:
              - resourceRef
              type: object
            status:
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of the IAM policy's current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        type: string
                      message:
                        description: Human-readable message indicating details about last
                          transition.
                        type: string
                      reason:
                        description: Unique, one-word, CamelCase reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition. Can be True,
                          False, Unknown.
                        type: string
                      type:
                        description: Type is the type of the condition.
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      version: v1beta1
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        cnrm.cloud.google.com/managed-by-kcc: "true"
        cnrm.cloud.google.com/system: "true"
        cnrm.cloud.google.com/tf2crd: "true"
      name: iamserviceaccounts.iam.cnrm.cloud.google.com
    spec:
      group: iam.cnrm.cloud.google.com
      names:
        categories:
        - gcp
        kind: IAMServiceAccount
        plural: iamserviceaccounts
        shortNames:
        - gcpiamserviceaccount
        - gcpiamserviceaccounts
        singular: iamserviceaccount
      scope: Namespaced
      validation:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'apiVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                description:
                  type: string
                displayName:
                  type: string
              type: object
            status:
              properties:
                conditions:
                  description: Conditions represents the latest available observation
                    of the resource's current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        type: string
                      message:
                        description: Human-readable message indicating details about last
                          transition.
                        type: string
                      reason:
                        description: Unique, one-word, CamelCase reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition. Can be True,
                          False, Unknown.
                        type: string
                      type:
                        description: Type is the type of the condition.
                        type: string
                    type: object
                  type: array
                email:
                  type: string
                name:
                  type: string
                uniqueId:
                  type: string
              type: object
          type: object
      version: v1beta1
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        cnrm.cloud.google.com/managed-by-kcc: "true"
        cnrm.cloud.google.com/system: "true"
        cnrm.cloud.google.com/tf2crd: "true"
      name: storagebuckets.storage.cnrm.cloud.google.com
    spec:
      group: storage.cnrm.cloud.google.com
      names:
        categories:
        - gcp
        kind: StorageBucket
        plural: storagebuckets
        shortNames:
        - gcpstoragebucket
        - gcpstoragebuckets
        singular: storagebucket
      scope: Namespaced
      validation:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'apiVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                bucketPolicyOnly:
                  type: boolean
                cors:
                  items:
                    properties:
                      maxAgeSeconds:
                        type: integer
                      method:
                        items:
                          type: string
                        type: array
                      origin:
                        items:
                          type: string
                        type: array
                      responseHeader:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                encryption:
                  properties:
                    kmsKeyRef:
                      oneOf:
                      - not:
                          required:
                          - external
                        required:
                        - name
                      - not:
                          anyOf:
                          - required:
                            - name
                          - required:
                            - namespace
                        required:
                        - external
                      properties:
                        external:
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                      type: object
                  required:
                  - kmsKeyRef
                  type: object
                lifecycleRule:
                  items:
                    properties:
                      action:
                        properties:
                          storageClass:
                            type: string
                          type:
                            type: string
                        required:
                        - type
                        type: object
                      condition:
                        properties:
                          age:
                            type: integer
                          createdBefore:
                            type: string
                          matchesStorageClass:
                            items:
                              type: string
                            type: array
                          numNewerVersions:
                            type: integer
                          withState:
                            type: string
                        type: object
                    required:
                    - action
                    - condition
                    type: object
                  type: array
                location:
                  type: string
                logging:
                  properties:
                    logBucket:
                      type: string
                    logObjectPrefix:
                      type: string
                  required:
                  - logBucket
                  type: object
                requesterPays:
                  type: boolean
                retentionPolicy:
                  properties:
                    isLocked:
                      type: boolean
                    retentionPeriod:
                      type: integer
                  required:
                  - retentionPeriod
                  type: object
                storageClass:
                  type: string
                versioning:
                  properties:
                    enabled:
                      type: boolean
                  required:
                  - enabled
                  type: object
                website:
                  properties:
                    mainPageSuffix:
                      type: string
                    notFoundPage:
                      type: string
                  type: object
              type: object
            status:
              properties:
                conditions:
                  description: Conditions represents the latest available observation
                    of the resource's current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        type: string
                      message:
                        description: Human-readable message indicating details about last
                          transition.
                        type: string
                      reason:
                        description: Unique, one-word, CamelCase reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition. Can be True,
                          False, Unknown.
                        type: string
                      type:
                        description: Type is the type of the condition.
                        type: string
                    type: object
                  type: array
                selfLink:
                  type: string
                url:
                  type: string
              type: object
          type: object
      version: v1beta1
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
        cnrm.cloud.google.com/managed-by-kcc: "true"
        cnrm.cloud.google.com/system: "true"
        cnrm.cloud.google.com/tf2crd: "true"
      name: storagebucketaccesscontrols.storage.cnrm.cloud.google.com
    spec:
      group: storage.cnrm.cloud.google.com
      names:
        categories:
        - gcp
        kind: StorageBucketAccessControl
        plural: storagebucketaccesscontrols
        shortNames:
        - gcpstoragebucketaccesscontrol
        - gcpstoragebucketaccesscontrols
        singular: storagebucketaccesscontrol
      scope: Namespaced
      validation:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'apiVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                bucketRef:
                  oneOf:
                  - not:
                      required:
                      - external
                    required:
                    - name
                  - not:
                      anyOf:
                      - required:
                        - name
                      - required:
                        - namespace
                    required:
                    - external
                  properties:
                    external:
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                  type: object
                entity:
                  description: |-
                    The entity holding the permission, in one of the following forms:
                      user-userId
                      user-email
                      group-groupId
                      group-email
                      domain-domain
                      project-team-projectId
                      allUsers
                      allAuthenticatedUsers
                    Examples:
                      The user liz@example.com would be user-liz@example.com.
                      The group example@googlegroups.com would be
                      group-example@googlegroups.com.
                      To refer to all members of the Google Apps for Business domain
                      example.com, the entity would be domain-example.com.
                  type: string
                role:
                  description: The access permission for the entity.
                  type: string
              required:
              - bucketRef
              - entity
              type: object
            status:
              properties:
                conditions:
                  description: Conditions represents the latest available observation
                    of the resource's current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        type: string
                      message:
                        description: Human-readable message indicating details about last
                          transition.
                        type: string
                      reason:
                        description: Unique, one-word, CamelCase reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition. Can be True,
                          False, Unknown.
                        type: string
                      type:
                        description: Type is the type of the condition.
                        type: string
                    type: object
                  type: array
                domain:
                  description: The domain associated with the entity.
                  type: string
                email:
                  description: The email address associated with the entity.
                  type: string
              type: object
          required:
          - spec
          type: object
      version: v1beta1
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: ${name}
    app.kubernetes.io/part-of: presslabs-dashboard
    app.kubernetes.io/version: "1.4"
  name: ${name}-dash-globals-manifests-7mg8c62h98
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/name: ${name}
    app.kubernetes.io/part-of: presslabs-dashboard
    app.kubernetes.io/version: "1.4"
  name: ${name}-dash-install-manifests
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${name}
        app.kubernetes.io/part-of: presslabs-dashboard
        app.kubernetes.io/version: "1.4"
    spec:
      containers:
      - args:
        - |
          # fail at first command that fails
          set -e


          # wait for needed CRDs to exist and be ready; timeout of 30s
          # those CRDs are installed by stack installer
          # wait for presslabs-system namespace to exists
          RESOURCES="certificates.cert-manager.io issuers.cert-manager.io"
          i=0
          while [ $i -lt 30  ]; do
            i=$(expr $i + 1)
            kubectl get crd $RESOURCES && kubectl get namespace presslabs-system && kubectl get application ${name} -n ${namespace} && i=30
            sleep 1
          done

          # expect CRDs to be ready
          kubectl wait --for condition=established crd $RESOURCES --timeout=120s

          # wait for cert-manager webhook to be ready
          kubectl wait --namespace presslabs-system --for condition=Available deployment/stack-cert-manager-webhook --timeout=120s


          # patch with application UID and create resources
          # don't validate due to: https://github.com/jetstack/cert-manager/issues/1143
          export APP_UID=$(kubectl get applications.app.k8s.io ${name} -o jsonpath --template '{.metadata.uid}');
          echo -e "\n++ Patching resources with owner reference: $name ($APP_UID)\n" ;


          # create oidc secret
          kubectl create secret generic dashboard-oidc || true

          # patch oidc secret with owner reference
          kubectl patch secret dashboard-oidc --type='json' -p="[{\"op\": \"add\", \"path\": \"/metadata/ownerReferences\", \"value\": [{\"apiVersion\": \"apps.k8s.io/v1beta1\", \"kind\": \"application\", \"name\": \"${name}\", \"uid\": \"$APP_UID\"}]}]"

          # create sentry secret
          kubectl create secret generic dashboard-sentry || true

          # patch sentry secret with owner reference
          kubectl patch secret dashboard-sentry --type='json' -p="[{\"op\": \"add\", \"path\": \"/metadata/ownerReferences\", \"value\": [{\"apiVersion\": \"apps.k8s.io/v1beta1\", \"kind\": \"application\", \"name\": \"${name}\", \"uid\": \"${APP_UID}\"}]}]"

          cat /data/globals/manifest_globals.yaml | env -i "APPLICATION_UID=$APP_UID" envsubst | kubectl apply -f- --validate=false ;
        command:
        - /bin/sh
        - -c
        image: $kubectlImage
        name: init
        volumeMounts:
        - mountPath: /data/globals/
          name: globals-manifests
      restartPolicy: Never
      serviceAccountName: $serviceAccount
      volumes:
      - configMap:
          name: ${name}-dash-globals-manifests-7mg8c62h98
        name: globals-manifests
