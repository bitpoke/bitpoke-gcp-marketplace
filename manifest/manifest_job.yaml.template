apiVersion: v1
kind: Namespace
metadata:
  labels:
    certmanager.k8s.io/disable-validation: "true"
  name: ${namespace}
---
apiVersion: v1
data:
  manifest_crds.yaml.gz.b64enc: |
    H4sIAAAAAAAAA+19a3fbRpbgd/0KHPUHOh6RstuZnLR3sz0KrUxrYstckU52t08fH5AoiRiBABsP
    yfSc+e97760HqlBVAEhLsZ0AHxILLNTj1n3fW7fCbfwLy4s4S18G4TZmH0qW4l/F5Pb7YhJnp3fP
    l6wMnx/dxmn0MphWRZltrliRVfmKvWLXcRqX0PxoA42isAxfHgVBmKZZGeLrAv8MgjVLNpNifbrO
    stuXwSqPxnFalGGSwK9JuGSJaBduty+DKCzWyyzMI3q1Wod5qb0cP5s8nzx7vwmLkuW8RZaWeZYk
    LB+XWZbIib8MjqHhMTVRX0+2OSsKGLKYrLLN6Z1c+bMJdCummsdleMNeBosY+6SXOUtYWDB9Gtg6
    DTfwLlytsiotlwCfOL0pJp7BjootW+Eyb/Ks0pfZaMa7FQDhQD/jI/zIR6AftkmVh4k1OPxWrLIt
    zOoSO9mGK4ZgvAuTOKIN4d1Ci/RsdvHLi/lqzTYhfwmd5vBDXsZydL4lCj/UOwAoK1Z5vKUegxF2
    xdvAD4ARrAjKNQsEdFkEc8Jhguwa3scFgBOXzFKOI1q3ATYJ0yBb/idblZNgznLsJCjWWZVEuNPw
    Zwnfr7KbNP6oeobxMhoyCUtWlEaPcQqIkoYJAqFiJ9B9FGzCHXSCYwRVqvVGTYpJ8CbLGXx4DUi0
    Lstt8fL09CYuJUXALm0qQPvdKaFevKzKLC9OI3bHklOA15jmmRL+TzbRn3JBLcVIm1i5w10q4HOx
    o2q7vWD+GX4NAHyh+IxPt4YmvkIgXJ3PF4EclCBugpiAW39W1HBGuMCyWc736TrPNtQjS6NtBoCk
    P1ZJDF8ZXRbVchOXuLH/BPiVuB2TYEpsIFiyoNoC8rFoElyk8HbDkikQ00NDGQFajBGC3XDWmZXZ
    kANHvZY0Kx8XheBTFSy/iMx3je1bAOgqwEPARsC0t0CBF6+CaZamuBkAQGPclrkHBOUYOtGHG4sp
    +BekeN3d8zDZroGjj8fjo/Bzs/9VzqjpIgZ+VYYb4IxpZQmGh+TxnGuvcBuv41WI+8GxdoLvNmEK
    3D8XAyimHUYRLTRMZjlxlGmWVBu+wHHwH/O3l7OwXL8MJrCGssKRU/5B8fe/Pvm3Ce7FDz8cX7Ew
    2h1/8w/RiubNp0O/HDk23ewcZjOJi6Ji+RW7nuCnWh8X9AMXD3mcgRzbvQyed3faa8awOwUARhtu
    Xq9hn+EkpkysnT+yaGbabMLZX6n+tHhfQZyMWgT3ayaFC7EzwfjuQVzQ2MSRSuwS+dRNFeYh7CwQ
    JwiTJXYFv6XBGpQSoInxkl0jv8rySMAYkGKVZwVIJ7aFT0uGYjXneA/cj7gkZ6nYPfZGsyCmLQdW
    82eScmHEq5+mL168+EsA421IXEFDeP1uMZ1o4D8Tm8FhjQy21i0ciOxQK6Y1CVxxEjBUCweF0O8g
    jPPysu5sDNBU/xg0kEEDGTSQz6CBrIq8Vf34cQcMqkhi2A9cTQiCW2zW7PwNgHeVRYB+GkuYxzfY
    ROcM9YOsKQSzbLkrWT+lBaZT5RoD8ExTDAdT0dgP0nRYJWXwSnTRd8i4mJ61DncBDYJ7MPQA8fJb
    AgegJAyFwNFnEBacheHKg4KDZtLoOQAdD1n1Zgv4iQwo5Og6Eu1HoKMBS0YCAmngXMMSlBsWpo1F
    CHnfsRLRitNnzoCGYFeZ5Eu8F5o+UZbN/CdBcHFtLYkWgDg9Cq5jlkRSXMIKTgKEBcq1LBjx8UfI
    3cRcFAOw+ryPyzV1fBMD/ZBgQgFH8hv/nUrJgWDHtx5JZfYJm4iUXiCZw0qcM5eznSYV+g/qSQfG
    G/+MgfzuYqQUmrQ5KGr4I3yvBkw5rEFXST+GVqdxoVT5AFAF9GGu2fCeSJSLjmg3lYgBYcd/tXrM
    rvW9vl/Hq7WkHfp6ZCsGoyC+DthmW+6a6OzjNPhwPcN63UKK+DSFS6+PSNvZ7yOXgYTPOFAac7Of
    rGl/uY0sRYudbJuU416MO3wAvm2wqqpckzbuQw9kR+Y3za0/hL1r3R2woNBYjj1Day01m1Y6Aucm
    OigE45VawYMsU5lJzVXGJds4SKWNjNDILcoF2B1FLO0cV6sGCF9bHyEvQRDUltEqywFE26x2GdqP
    UlmLUiAsultTEFFST1artWWdDkBUrsY4trNVK3mjKkSWZY91v+EtuYRbV8DIYGdBjVomTG8o8TwC
    HStOCs/iRSNafKmAeQJLBvnNNkKbhf4L3+o71sU/7bGsK2rIV7XMYxDhm3C1BiOmXh37sE2AbdPq
    AOi+/VyzesdGRXNtB63CZmSeVXB3gASrmgYoCSnh05PRIq8YyNrRT2FSwD88ixi9S2/T7D4dfeOe
    L0urjXs64+AYhzj2/Ujj+n4Vox4CIvq5G0ALaOYAz6oCQk3LZAcQIm+Lb+Gts/CJPFwafuh4rfmg
    7GEseVj/FOZ5qMuWTj9jjULhasW2oNxfNl0Rx8eG64H+1Dht8Pd/oF8BzC8WCTufvxxcmFzSfS2+
    y4IBsMh5pH0/p5f9Ohicn4Pz86Gdnwbr0YmKfnC4O6GJ9s/B5Tm4PAeX52dweYYr21oyNu9s+uZc
    Gplky1zHN8KDSIMgnSMSU7upLk0tregS1IFlsjtRZhHvU5gYoOMG6+yeWx3ZBn7iDCdIYvJlZqmN
    EfhoY9a4I+huiY7DLLljEejM8QS2bgPMGNHtb4vF7NlzoqlXl/Nnz10mJzqpuMcImvDJ7OPf4bBy
    KbUeK7erQ7E7BBvvz43te8VbS9sWYYmsSnQi/avw6xzBBFoNztnbNWUXccds5lawO5bHnw5bQG/U
    VJTrx6+t4zOWS2wxA5z6efvQfq/YygU57zjII7L00uGWM9UX1YyzT/4Z95tyHQO9ppw0DA+vvTkX
    16BFNDokZw+SI+MdXMc5oAewphy5KWI9CWNsiuNYfUrPsuqUe121QQQdrsM7BtNPWHpTrhH/vvuW
    ktLCFYg4e4uyPLhm98jMsyC8y+IouGEpaUZAuXHKgwjT+VXxP3CapFBhUxolydIbh/NZ5ygnQpcy
    ZvoEB6X1q2UTIL6RPVtdGmtQc+ZymkAKNgMnOpqSPgXBUy5dLMUf+0kLTYXyYIy+Z6Eid5EaE4RJ
    KZiqhT1tfHXyKdhjdSywycYeruGAaXkovjRB6WFELezHR/m94m7Th4i2bc+iCA3Xjn2+mKl25lZf
    zBDvxC977fKjAW//CKIZW3MHDilQaCPXVxE4bAkbeMNunzNgSJtj9aiCdl91oHAPje73H7GD2bLd
    WXKDzpi15SI2cP5nraFUL7d5fIfoAp0AhOWPyl/bFk3RP3XSCWKZRIgT3L/sXhm+wHRshGcwOBDE
    cV6Ex0g0x2wV4T+hn+bchSGDqAEiCH6dg1UdONgLEmE9CZxrgS1hhX/+1+8MDKVFyCENeNhqFIxp
    dPXs2+8dfeVWT03cdbn1xwF8Z72jefWVSTDmOQYV4X0XRsh2LoRY5bttmd3k4Xa9IyqNwjwqgiez
    n6fzbyyguHBgVBgdcukm451xaqKIDWYLZYLj7e2qeH5MO0D//v6Yz4xiojADnNufuJlI//ze7hZx
    GogImGqymwjk0sFAfFvil1CXRLdij60uac+XO6lE9NYQbznidm2SQG7aIITjMi4V7lmEKiFus7V+
    hMpdPaTVwWYtWXnPAACI4k46+P75X/4MW7kCAQEQJQ+sRa2UaYEUXcsYIg7HlqdRYwIykAbkehK8
    +P7bk+Bf//z8G/c4tp5A4V5B1L5AeJyW333r3DF06DVtkyy/CdP4Y7dy+VZrKDdP/7jdHnw03Q7U
    HHb/I3m2e+vG9E0g3OHswzYW7qRoT125DoS0Dj1XzSTcSJ2QiRz0q+Z1zHiMzAYOKRe8ddxzju4E
    mEYAR75+jLyYIdGifoZEiyHRYki0+IMnWnAm9hOQWpUzFwfr4hLehYGed3YNRm3nATZN4lGUWUJZ
    z7mjLA1lntexfWNAECCkJorQpBBgMY/LaGkCPk1lzyUOOSqfK0dlDeMzkHQPmqGC/2tmY+gJAS0J
    JMITrX3Mw0zdX/OhubDRPr+qXwyZIF9lJohEUYO8a8Q9GtI7hvSOIb2jC84Pn95RleuP765et6d4
    iEbSLsN/ymMymNVxxg9DCD+DN8BQ5xIouudYASwNQ1O93VjuxAkT53iignKs8YlTqkfeSFKpfVRy
    VrbG+jYFjfbpU+AJT58iqY9GvI/RCN1MI55DksNfiIjIz2t/HjFV+8jXMivX5GKsXcvk+UszYPU0
    L+nghX1D7qy5bQxeqj8S9JPg1fns6nx6tjh/9ZKHXuop8mhInQBTTwA1GdDZR859cOjQQsz3iTdL
    1IkjxHwYLfehA6z1JGATx8E/9iFEYxY1od6osm94TkXmCC+JaGDnJcIAjBDhxzhc4AtO0YGwGrzk
    cANq4WqAiF0qTJOhMRGcizJHPByZEfsQF+UJzgimViDDlOgBOjxY2VGzJ6FpgEwa4ZSbexqIdhQZ
    ZHkOWKx1WOWpCHUY+KaaYBTWne5xDYYTTKbx0xAz23X53CWB8HQ6BXHTie4hfL8DlGi+3fmpWGIp
    Er5Udh1+TUd0DXZJZMvR22ZqNbrT0E3yrvmTxVAFP7W6RPYqWJeXuXYzU5tKO5lrPdk9kLlgCex9
    ZoHcBrtoKL4g3YhRfoZK0Ol00vNH05fUxhCUKK0R9oNrV8Y+cIC6HDNd6YW+HCPnIl+LlBO1pJrl
    C0msBzE9PQYKm4jFmZHYEHCiBHZLcqNKESPUFNVmeDum0cvwFsOQDAwOysjIcF7Uy//LUq0XGn2D
    xyFBBnm75OsqxLRUogIlUKiJCYVe00iwoX/90G6TASipU9xO7k5AQ41eveZ/SmDyGdtcuH4wW0tE
    v9fAtDeoz1JPmPumTYsbRVHAwjxBkW2FNcxJUopR31l0JIH2SAHtSgCVW7gvrvJ9/1RcXchdU0nQ
    mCT8Ef3HHDlqTIZ98GOUH0kz2kCzV0pezJCb0KT9eEqD7xCZil0x0VQrawPFYCnTPvL2q3fE5ZYS
    J/f395PGWA9CU3y7BpoKfgua0mDTi6zOOFwVF+VkJTM8gVpyAofwp7lyrfkDlGnmebisB51QMQ99
    15KF3ivDuyVu4PipzG5Ze4x+gS08mh593cMY9W6iK3Bjh2xkaFWEb5qTMCIFtafFDm+hhRYcA/k9
    e86Tp9ATAv/uO9sqT1on23A3iBgIP0RiqWgKbNY0azDyujErMHc0LTXJsttqq06YhMus4r6iQsb/
    HF6Mg3YHkDJahXl7+cJfRSNF8GVeMVRwnWYycHnZqzXL2s4+oaaC6Qajpzr/dVv6dpqrO01B+o6M
    l43w3Bg32vhbjw2ojxD3jTdg9xh/Oxb6KAkRykXeuk8z2UrjzJRmVO8X07ZLJJS5Qt2NjUUbpg6h
    jtRsRgJ9n6KDAA37p5TIvHOmbAOvBW65ZqtbRJRtSP4CYXKptGcxJ0qkX2LG1Yj7QnEwq0cpyYGp
    AtzyGB0Z9aQ3DPMs4mITPKEjVNiSzkwFi/+zIJ+3A0FRRtK4ao2UuIzfiqNXptmp2te+GCuy7M/S
    rv0mHfuq3CuaiAJSykoK8ZB0bwodryksBkUNKsc9E3vI/W+EOBluSQN7KF6Laemwg1GVYGa6zdWy
    zRa0nrSk2I6rq2vMDlB91XGWkRZ+dKTDYXy6gbwI+JyFOBtgOCCsw4ToidF2xWQ6V6VwPzk4cDPb
    m2Z20hiknhRfDbquSOcNU1sPIdWK2/X9McCdv+LKXFGukEZODjr8MS5OOTmgzq53Hd5YHkqjhXKS
    5nDrLTKodbvzhvbB8N3IoUb09UglD+geR6eHkY4OSNHHrO+IIHhWSb+s4uOmKjDm0Tzrba4qG+hv
    t8yV6zXWKNn6SRz8st5TPoVls42529N6v1emnnM246AZaFULLQxXlENWNYcZq5CPeoFWWP2HTHsZ
    si1+s2wLfjaFKx+tGRf7RcitIy8qSm4MeKQi5eKLoyFMPoTJdRAPYfLfpApCm6sccDa27Ftrx8+x
    lbRy6ZPa/hd3TnhdEx4vjjiMgYc4KL3PEfm0pjFT3zTz30OZz96oiug78oGPEbHCevlyKYeEGxyB
    M+cSFuKkipmzj85Y8jsRpgNCijMe9uE/+fBTpOJz6LDde9TiSfOFGq2Zjy61swYi+lw6aee2WgKj
    Y1g5A8gnylYFUg5K9uIUXbR3Mbs/vc9yIJGbMTo/xxzZi1OSNad/Sp2nreWzePvq7cvgLIqEXxm2
    7rpKuPoOLKSWEyfExk6CKo7+apsmveDTVprBGVmt+/R47HguXo+wG6Xs6R44kcVn+jF6raO4jbeL
    13MAS3ztRFMzx+Ca7LsT+gxlp3C/NycCPbbW5GwzcmhW3FveDQrhVTcOhzd9qcLP6juHho8Z8DX9
    iYXyHCg3u6i64SKsT6p60hZ5da3+weKv/HnYKGzfRdOyOiKyjsX3jsu2dtnY+n7R2Y4erdhtrxht
    R6fOCG6vSG1Hx+6YU9/YUkfnVsynb4SpC8RW/Gn/OBN/Osv44NOrlE/d0B95ErPviOmKVgdFdvfD
    9v7x3Y5+Mfq7f5S3C+frGPA+sd6OXh2R4H0jvh0j7EGhety3CwkHCm0BzsNSaI8IMX8OjRN3cvty
    72hxR5ddsWT+dESUezZ6hMpjXLF0eFItU9HpCnVVJ7PK6bcnxfmOYeOz/1FsxYjjm9SoKOgEKLnN
    6mNw3L/m2smDskCdR7VbYYfRuTmV3m/25v3kDos87ANxjMx2wvoXqj+FTdHLsnKdrO8ah8babq/A
    EulppmMhQcOlgJr3Ge+CdMa5+yxjv7lQm9C9dueEfiXhS6FNAw7UC6LgBj0XlBrfSvu/uMpw6E8v
    JpsDEOwLDvfupmjz/Minn3HR6oGRz4GemI5eKYQa9vbIyKe3NGvz0DhX9sV4auTzoB6bPeHXXlyT
    P15PjjlWq8TsGmdMlOr9kVOU9+fCI/h6T5ASV1o9rfh080BEKc6PeRqYmf6iP33otoNmH4Ne96bV
    XnjWRaNfLn0+OG32gFc3rbTQ4+H5kKgO/lilkVsHMK8lCgv23bf1RXhnwZI+RHwTMUxJB8Ib2loI
    ER/KaiKNUKRdzZU/l5sPspjzHEmnzFZZIvJw8CD1hpUecwyTN25SqrKAVu02QYMW+1HdIPXivcKY
    hsLrn8qT124YgyUM5hiwJGinF8CnpC+p0yoo4FLIFVwP4ui15XKletd8oSKPouRQEhGYpBGJMKxe
    igJZ7N6e80O89aQFa/CQZUwfSpVHDbC37WQLHb/2ztLwOt5HfV8lWeWkYrNgAbZqHHD9hcbiHTRr
    sbMSI8hOz7sgI1HbZjGbYW4X77955uqQKB5wu8X+gvJsdmF+JWLjSrzUzgJ/EaFABwtfEd7sR1LW
    J54GEetbySBiH1HEOnPi5ePLjV+CRKW/UUjpaN46hwMDs2Yqd/3eou99FYhy6zwBbFIRcKWa2S1y
    jOXPQBQLYTBLwpKKmBhczy2IJSd8XK7XphVZq5ue8cacx+nXNGrxYNILMkR0P7fLRGhZE5QqewqX
    SPlz6aoRrjsR2kmLayIrizo3Vx6hkEfE0cmGihZodDIGoA/m7VZW3aQ5x5RmK0OlWnVnHLxWsdSc
    W1m+pidInzkfRIvGckVmLHLz+oDAvA7M07RDKaMZdrEaICQ6wREmRV95OTU+cRQaDxtmZ+vlGmva
    4TyVZffxGAHw68jYX64d8ViYkEmbNjEmBg7K+wyFV3ESjOQgIxplJIcZfYpwHmSaer56maapbz04
    yqOIN5MW95VtGLXtFG4Yy5TLF6udZUm82vFfONOv0+pibxAjCM6A2ak8zU0YqTsGRL9bKSjreh8I
    Lzrpu3R7nWQcJuIh6C3NzDjNohXPf7DQCo7Vz8b6xDNf+yZ3YoHIK3aDt07BxM97pXq+tr8xEz+B
    72UrlPCRClE794JnQAPYZF885UrkWJ4Y992Uebi6FUVwOS54nJh6d6In14QCX82bDsKrcsv8tQD0
    7upCAqRKY0BfNRH9KCMvroOHOIEYM+dqtNOdvDTOXd2VPOepEp+nZ/utpeW+pqGQsnqGQspDIeWh
    kPIfvJDyH74asH4KLdxuX9bnzOgVXldWai/HzybPJ8/eb8JChiQe8ugapRnGJTLUYBFjn0ccPxLg
    MkyfRn3QLU7vYjR2PIM0j7n5mjnOul1Qz8beisGO3HVgi2qpTlnxjgT2BP/130fD+bfh/JsO4uH8
    24Off3OeZ7ML15MlI2QZJ+iIHwF7EosS1LhqgDbXz1lKVz7ZsoZOoeOKmtc+eYUdmuhss+iswHNV
    t1PKMf2hrtHiXkKZBlbl26xwOG3oPiA+qERLvuC62rZrqdrSepYBeLQLXhr3yMpmGt3QZDmrrsmt
    7pASknveqPlI1g6vvW5oTppiixuKFE4J626tRsA4A65JDrdHtGdwke+IUfRc4EKZIXyRut1FheUl
    2/kSbLCzpuG1kUYZzHjFL+Y1qiy12CqfaJr0NrAW5PAlI0t6Gr9YM2lBRwd/4rVT3rnrcPSa0Z5W
    iSD/DoP/N7JBxg5O4Whk1dmQPwic/HTbhg4D5XaqrunRwiavpJSBfzkE40EywDalvgh753PV43jo
    QhyOChxW6Y3hkgrxDNbHYH0M1TfqSQ3VN4bqG0P1DQ+0h+obQ/WNofrGUH1jqL7xlZ7tH6pvDNU3
    huobXzKFDtU3huob5jNU3zChMVTfGKpvOJ+h+obxDNU32p+h+sZQfcP5DEeDPzt9/t6OUQ3VN4bq
    G0P1DfV6qL7Rdy34DNU3BhE7iNih+sZQfcO7uqH6xlB9Q3+G6hufIJwHmaaer16mDdU3huobXYAe
    qm8M1TfUM1TfGKpvDNU3jAl9ycfKhuobQ/WNP0j1jc2u+GcyRrYfloJYRQkO85fxs8mLyQv++2cu
    wEETW4IWUW2LCf2hjZLlN83zba4mjgNub7DZj9StscH6cEeeo25f5tHD381mi6u+23c7jDgJhsks
    p/N30yypNhxO4+A/5m8vZxhcCiacxic1zf79r0/+bYKsIfjhh+CYGNvxN/+YaEzHcp2LGemMic+X
    vj5y8EBzCjDnSc62YLOEnhFAdCwxsfUaf0J2GaRZxMyhtO/5aLjuGwKrMZzEoIl1GFXr7kwcAeY9
    RfxowQEkVN+/3qAhuYv0S7HO8lLjrWPexkNgjkI3q7D2YiI4JTS8EJb6QbMhxwZUX3aXCsJmHZ2v
    hLy/tkpKtOO4dHSuPEZBpTe7+f9+/UoMYCOkGtrH1ocTzMMJZgXi4QTzg59gFhLBEUxoJBXIZnoZ
    nkYgAWFM9C57tS0TzTdYH4aLAV4lGq7uykMO40KyjdY5S67TLBwkP+Y55Nx1JJ2eJJ1dzspDJm4Z
    Xy6za6xtgfE60plmCzx+w5JLBjPXDjfWHVtwG0oxmb0MpZiGUkyN56svxWSyhaEi037+rsGQeTBD
    BpMGHs2IeVe4LGoacjBeBuNlMF4+Q/mlJMnuWfS3rLCOQZqKR91Ohj7Fp8Ea3wEai7wwkXRba/uW
    ADhc+/9ajS2Ze9U655nMAxPwtfLCkFE2h2zT+D2Z1AdkUNf1nThHdqol7anTrUqLL63sy0sne7A0
    soMSd+zDa36UY/kmLopOU3VWt5OIJ0sW4fkTccCfqo1h4QVRMcFfgUPa3A9isbYsomMpDbNb6wiU
    l5AOHntymEVNCxLPp0TmntPvbRUgOpMD2ys+FIZ207JkrgY1Vyu0FqBi7poxIeCZMpZiiD1r7TJ2
    CEp9zB1q2Jwu/xwTEOOImQvwzNW1rNYFPN5mtdlbfBkuQ8yNVmMdTz/dbuKVbFupHzVyVz0Ione9
    QJl061HGmjU1aoS5BkVhsoeaHXwG91+jCO9YSdRO5ek39gfSLgyuQO0ZXIGdkx1cgb9jVyBxhMEN
    +BW6AT9XpXRKTW8tlL5vahH+j28bH2Gu/u5MCuKnKEAeT9QBF96HXn89j7M8Lncvg+fdnar0Folj
    Kk9Jvtinu45MoubZL7MJd2TVed+WF0vUVyAZglfJCBQmcSJcWChLZJxU3CmDHqebKiTbhOfYUy26
    Ei2uNai2gMbjJbtGY5e2WvQarvKswKKeWHOhZAFPfiOED6bk7+LOsbqEQiwq+9WX2Yj5K2MORrz6
    afrixYu/kEwjx2NMpt+7xXSigb8t2apfPf63ainSJczx+GhwBw/u4MEd3AXnh89lgclmqaugYMOe
    kc2k8cg/5DYkoHFtAIpaz6/Or+S5a0sTmM6v6Ayy2at5Ipk6uY5zUBBFbWVtDGehSXWQmk+w7nwS
    nJUBxsFKqeppA2dY/VhWb7b6lIeqgZMaBi2958VUOTC0o0CiCYeD1aMGF4JDPzM4EGfxWzdpNKU2
    2tF+rBq93dKckCKw8m19BIx4zzq7txW1dVYwo6FVhJtuTAOEQnGB3Tdqldv665lYAKy9zHccfuwD
    +h3RLmAhAFJUukWTl6oE1jW1kfNp22l1TrUHnj6FzX36FLd3NOKDjUa4vaORqH4LfzaLEXCuGtsn
    UZdgq1I1oRrpsKghIClIYOMovIBCjfkk4hQbm/CYgjUAR5L64OgmU3Atqu02yzlkRGXVlbmzTl9m
    aVZYBwERNao+kaqGRzTJs7tkdOsdDTwBvJxdnU/PFuevbAuirBG/OWHYpuuqrHJY51yfqiyVQxuN
    yjIYrS6KVYUJoC0hEVcYFfiKSdOXfpD7Q5TK72GVveItm65x0YFW/ZYvl5Ocx9IWDkpvudvP46QU
    S3kId+OqaPc26uiIJWb5eT8StVTSgXRMxRHxHkU3sUisI/5ONALKGqiGH6XmQEqkzaGFRu0hFv5R
    46eWihPeHfHdG2AiluRmxi0RyJLT+uIAzVGarpLKJTxDKrdWSj8G5za1noyEgG7ZTgHrBEmbwO0j
    YK1OOwRuDwHrnKdf4HYJWA/NdR5UtpFf2byt234hW9WhaNx/zq6SnWKX4vT5mA70eM6G8yhIjSPy
    cDa3LDlbessp4YJjh+CmUcZo+60eSQSfSJxBWNYMHg98R82eBBqBqTPC6dqBTt4O5WrA8jzL9Q6r
    PNUK3XDMlT9vwvyWcMuWlGGc2C7YNn7PLVKfZ87HU5s2TK+PfIHsg6K9juIgHqbsCYsUZvhDYWin
    tdA//lFz9N6cnxgeGPcq6UCvyaTXP3Sdu9aRemHrIdtsWyUUpwqvS5bXfF2pOFaPRUVxq+sqAfIT
    ckSvzKDdIHSikLXuUw9+2LPl1vyI+PGI4Grpq4dImFq1bod6fVuQIWXU+zlwdH6TkNYUJY/X8pFh
    QL0YBj/Ab3Kch9DSsGzkx3dXr/sEQ0RTqafhPwXwaf/w9yyPP3KZKLVJn6rluNKA4CcE7UFRALfB
    5liKbbaV9R0bpjYtq9Z41qFmP+lpErksIp8uS3bSgXaRF+6sxkPNYtJsEU5O9XT1eLKnV3010vRw
    13XqqLgk1Lo+RoNQmAQy1qazB7U8Mwd4nQRsAlpw5zUvHcjn1U0ckz9EQ/EsQCgJffSUaY2rXMNo
    71JqMHtrLJ5um3rMHnqLmrmna0uj8Wgw/OkuwubVZvjToyyZT7Pp3UF7FbjODtrLorUUResgUG/l
    WAO/tcs4TTeVeb/mqnVbu4LQxJ/6BKEVW6+r1QvHF/aB+NxddTNoGovmxYENdlPzVV0oeDpGUSEk
    BQkKwXi9jjOHQPAz+17uM4dAOJBwhnsMW9oM9xgO9xgqEH/Vt6QN9xgO9xgO9xh+yRQ63GP4qPcY
    Yr34PvmGdB2SWxPmVyXZuvCj5z/KqpoiF7I5LZ500+q8qdNBhO18DIzg2fNjVF+PMT0D/n3IKrzV
    ln21lvGfwsFJy7AV2dbCkgbYuasTi7Nq2n2SZbfV1szxbcH+Qst3/eQ9BZKIVqF9oM0Bkl9FU8WY
    8K52fqVQ08OGCOfT/+SIRtFaShbgoiMYPdWlSJuHx3e/e1uUVPoiHT950mldNa/HUm90dYM053jv
    urBsrMDh+Mnl5ufPASFd9FVUuTOB3tjln+p2vGxkXR5XY63cZSz8H+7YrsbQ4/QaJDeqOTdhvsTU
    9hWmzIorisB6wHqG4+zacsh2ZeJ7kVu6/x1OZ3O1dTsj8CoIVVtDtqSy/PrlBtaSFZ/l4MGTiiCX
    66QM6V+3RLl3He6EfFcN3GzLU4JBeoncC6GUYD4bQpFgTawlDO7XNirW0ZBYnQ4UFVbd8Q7vpKl1
    65wpA9l0lhhDKebWyLmxJk0dFcFIxH7EDQnswxbJf0T+ixHhQpONuGrhjmUxVf2V65gsJclHTRDi
    oS9Xzeix5tS0fopT9wBiCfZ79GFa771b4RB2lphz4D1xeMqgJ4RaYgX2bbnjKRouyaQkIQXyMNdA
    ZUUvVEi4zpXnA8gYnzv0IeKBYkTRhepegFRyn0b0UJ1Gs3rl0cS45EguF4hZCv1A6uC8TWkzVtmc
    6gXaUPUf8njGUO/3qyutAmhH58sfobDKjHdt7K4c7mjIoh+y6Ics+i44P3gWfSqprVWIynIWgoIV
    iR4kUb7Q03AW58bj18TTnAW87V/Hd88m302efRFcXM0OmIL6d3vVdl8zByP/VTY1WLk2Jr23K07f
    bz1s/rcoN601NYtNDyJmEDEKxIOIefi6XdfEnK2EBzOV57p5gmqbRaOCcDiqEpFdAFMFc7psmlJe
    Z9ESL6yEb6wkFNPtJxnXj7I5JhtqWW3a3W+ax0cKDvNRXPBExty5OZdX1tn4tpA4S++cp0H0eZ+n
    d4qnQPs4z1K8mghQP495nRp01ygYbH0hEVz/DKcc/MsW4x1vWH7Dfma7H+iIHH83L/HM7s3uhw3+
    6OimJTrTFQVoicTAsn4CQusDCmyngwP/BgTiGV03rKSSKpRXh8WGDAnWfGqQOcNbj7FU74eYa9xx
    wDFiv+DxeNbA2nV2z8N0MUWNsCOEAzrNqtQVHiXIiAoT6LYS2fiN040h7+mOhgRApqOSwOvrNSyx
    /N4+uM+zeObVctbncnqRhCqaa+u/F7FoYNfC11fP21M7iq8dU1qjOKfQHSVgJdmK82jQM/H+eeTh
    L0XLPQumcdUQqHSf5Wnt+67PHUTGVr/O3k/fXi7OLxfvX11c+Zd3vx2Lqe69RHKlvYqd6Usm2YqG
    8m7LGLEtwMqNtNa4aM07aCU2kJadw/97XOLgZvoyfIjyP9Pv2yTIrpIMj4G5g1AX3AmOHazjmzUe
    E0tQGqPS1kyCkKs+USt1donK2AzVxAI3gZP4NAlj1+XEXdlVbTtigUXtiqBxDRAInFY49AgKe0Sb
    PQ1TvGlizWbq3vJrgdpTnLbG2j5F1uHTkY3QI37elYHQIvtcsHLJPxegWrMOHID6bOtXOd29IAC0
    jIngmKtN838iQtB4bWKYAhBwg08C0JTRN96ahg/kxBV6TDsCu5sf/EOdm4e61t+0rqg1nXibgTgG
    sdJrTVequYzUS+Yk3taVqTy3uvaoh9V2GXI91L7sdy04WycPVszeEAFOvvdJ8oDUk14zeiNbWrJW
    mNoNWetLthMKkSFWA7DOtqf3bHlai9d9pevWBZvOVbkhagBdiMNPgTJGDTFXu3M6V6KhBuOYR+kE
    UOusY59iKccbZ9iPVpJTKfdodFFYv42ZtSVaeNfqOZVvam7yQD5SqSwDSnSMEAb+CRK+uMdKWBRB
    5GYislVbMS8oEUzoF8eUjshncBw8YTcT1On+9hYvgAaVAf49v1icY9yTLOYQ7GXHraH6SSVEgaus
    4qfa6dSRM+YYgZKx5QfqUvbBtfnkkexb9+CAg8sO1WFPi9hpDtpGPFsSLFdJjH6Igw3j1pXvldzi
    UQY+zQjmq7QtFFi1opimpfRwS4o3juqRlmNmZhAyfSO4lslY/1mFO3SNKef1ae2hF1+//J8OFyg+
    BUXS1SAg8v+Xcw0OXKUJzaokmWVJvOrwcZltyRjIKY1FeaCuxBR4aTqzfaNrd37HWXIf7pp7NgYz
    /jIrZ9ynaf14yew03u4Fz6mGejsLvGg0VqhZF/gTtdgLKYq0MnT1s4Uu0AVIgz8iRqY3uAlnzbCR
    b3VW8zo/Su0ocfq+YmXDotiqpd245hxaeN099D1wbeR0mk/GzeSoNn1TQLo9Prxfw+XTIpgP8vjs
    4xPp7xLRJ+53iehgw4Qq6RD5Kv0eK3cZIcNWms4FCvEwSMMBkmU3Cbk7qojybFwlUfERwRLRxHHg
    W4PrxOEhcXa6h9fkQT0ky2p1y5wuIwt8P1JTXuQK1o6MSVupp4dNnL5m6Q3GJJ8faj729ZyMzg13
    CeUqr+ShY0AQsVhQ8kJXIq98SEmAD5HMkS4Acd6+/ffX5+/PZrPXF6A7Xry9fD+9On91frm4OHs9
    f491S12qkncElwrlTof+LRwOWzyW8aEXhBH9ZtRcXYHC/2qgPerKHNiPYZ57e/5Dm+aGsNrHNh+d
    VtskC6NiBNuYROJ8lZAkZphlombyxVjv8xcGT/ec12iy/q7zz60bV7zonHhjVqakmb9olSHOBfSQ
    Kz1kiLPrQa50TLBVrsBmGmLFrXTKxxArZ9Pp+Xz+/ufz/3sSzM9Boize168GgfJlCxTvTylwzLmn
    kEFL7scsi+hTdXqy73iyrDpQauEsf9MyqLiIQvAlnnoi+wNNOLQSBVrOs/BEs/Z8ymqzxOMz1/ga
    t4N8Mehpqo/lhDwKwetWRcCKYKQqLmyBs2TlPZ69YR9w5LgMPrI8Ix5m2HGmrHvuO4gEQ774s3Ox
    OJmbhqOgkbXnWe7Izu5RHyqMDJY7zXNbG6TWeve8Rc0QKae8zvsYzylVJRuraYzVgKdNfuFFuJxc
    pu1Hl7hXVfcAM+lmwE2WNcr6OYBF+L7V1SsMeDE5U77bYk9OpdilK3KwFIhqyN4jOQKNBuQYadhz
    efbmfIL/mc/OpueT4m71IFXUuE+7T9UqfiRfhr9orW49r0s6drDLrUcrdVwWg03NGTUiPw98NQoH
    luOHrUsrPcAbhoUE4xU745K6k6GO5lZ713VdZitX4B5VWjwjX6V1qGSE/Bgd8f2IvwyL25ry2Rg+
    1Qi8fi+WOBbaiIf0HZtTJgV3aXYVUV28nquGVJaHLp4Uc5FJqdDIOHbpLyeJsOh9SrHMEnnDxkG5
    l9r3e9Wi3QvLuJ1G5lT7LH/RGpLr0+FLJrNOD3fE6X+6S4HoARAV5nnsVfZZoNNHLj5HstBX1S94
    9UiL+tRyrJ96HV3tYR+uo9Oe4Tq6zskO19H9Pq+j+1W3Hobr6MxF9bBKF1kJsiZVtmmapeMSb3lN
    yUYh/asM8xus70DWGgiaCDrOdhtXGpM0ZFfZlu79QAecOjVTf+deyCHmaOc5w/8PWauTHwBvAQA=
kind: ConfigMap
metadata:
  name: ${name}-dash-crds-manifests-9hgc22mfth
---
apiVersion: v1
data:
  manifest_globals.yaml: |
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: MutatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-apiserver-ca: "true"
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: cert-manager-v0.10.1
      name: ${name}-cert-manager-webhook
    webhooks:
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/webhook.certmanager.k8s.io/v1beta1/mutations
      failurePolicy: Fail
      name: webhook.certmanager.k8s.io
      rules:
      - apiGroups:
        - certmanager.k8s.io
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - certificates
        - issuers
        - clusterissuers
        - orders
        - challenges
        - certificaterequests
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:organization::invites
    rules:
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:organization::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:organization::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:project::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:project::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:project::prometheus
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get
    ---
    apiVersion: apiregistration.k8s.io/v1beta1
    kind: APIService
    metadata:
      annotations:
        certmanager.k8s.io/inject-ca-from-secret: ${namespace}/${name}-cert-manager-webhook-tls
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: cert-manager-v0.10.1
      name: v1beta1.webhook.certmanager.k8s.io
    spec:
      group: webhook.certmanager.k8s.io
      groupPriorityMinimum: 1000
      service:
        name: ${name}-cert-manager-webhook
        namespace: ${namespace}
      version: v1beta1
      versionPriority: 15
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook
      namespace: ${namespace}
    spec:
      dnsNames:
      - ${name}-dashboard-webhook
      - ${name}-dashboard-webhook.${namespace}
      - ${name}-dashboard-webhook.${namespace}.svc
      duration: 8760h
      issuerRef:
        name: ${name}-dashboard-webhook-ca
      secretName: ${name}-dashboard-webhook
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
    spec:
      commonName: ca.dashboard.presslabs.org
      duration: 43800h
      isCA: true
      issuerRef:
        name: ${name}-dashboard-webhook-ca-issuer
      secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: stack
        chart: stack-v0.6.0
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-ingress-default
    spec:
      commonName: ingress.local
      issuerRef:
        kind: ClusterIssuer
        name: ${name}-default
      secretName: ${name}-ingress-default
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: ClusterIssuer
    metadata:
      labels:
        app: stack
        chart: stack-v0.6.0
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-default
    spec:
      acme:
        email: $letsEncryptEmail
        http01: {}
        privateKeySecretRef:
          name: ${name}-letsencrypt
        server: $letsEncryptServer
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
    spec:
      ca:
        secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca-issuer
      namespace: ${namespace}
    spec:
      selfSigned: {}
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-apiserver-ca: "true"
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: cert-manager-v0.10.1
      name: ${name}-cert-manager-webhook
    webhooks:
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/webhook.certmanager.k8s.io/v1beta1/validations
      failurePolicy: Fail
      name: webhook.certmanager.k8s.io
      namespaceSelector:
        matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
          - "true"
        - key: name
          operator: NotIn
          values:
          - ${namespace}
      rules:
      - apiGroups:
        - certmanager.k8s.io
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - certificates
        - issuers
        - clusterissuers
        - certificaterequests
      sideEffects: None
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-ca-from: ${namespace}/${name}-dashboard-webhook-ca
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard
    webhooks:
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-organization
      failurePolicy: Fail
      name: validating-create-organization.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-project
      failurePolicy: Fail
      name: validating-create-project.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-site
      failurePolicy: Fail
      name: validating-create-site.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
      rules:
      - apiGroups:
        - wordpress.presslabs.org
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - wordpresses
kind: ConfigMap
metadata:
  name: ${name}-dash-globals-manifests-t6hdkfcgh8
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ${name}-dash-install-manifest
spec:
  backoffLimit: 3
  template:
    spec:
      containers:
      - args:
        - |
          # first install CRDs
          cat /data/crds/manifest_crds.yaml.gz.b64enc | base64 -d | gzip -dc | kubectl apply -f- ;
          # don't validate due to: https://github.com/jetstack/cert-manager/issues/1143
          kubectl apply --validate=false -f /data/globals/manifest_globals.yaml ;
        command:
        - /bin/sh
        - -c
        image: $kubectlImage
        name: init
        volumeMounts:
        - mountPath: /data/globals/
          name: globals-manifests
        - mountPath: /data/crds/
          name: crd-manifests
      restartPolicy: Never
      serviceAccountName: $serviceAccount
      volumes:
      - configMap:
          name: ${name}-dash-globals-manifests-t6hdkfcgh8
        name: globals-manifests
      - configMap:
          name: ${name}-dash-crds-manifests-9hgc22mfth
        name: crd-manifests
