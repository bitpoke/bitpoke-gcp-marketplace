apiVersion: v1
kind: Namespace
metadata:
  labels:
    certmanager.k8s.io/disable-validation: "true"
  name: ${namespace}
---
apiVersion: v1
data:
  manifest_crds.yaml.gz.b64enc: |
    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
    bemyA/RkqKMC9XfuhRyi13cervr/UlNIDhRsAQA=
kind: ConfigMap
metadata:
  name: ${name}-dash-crds-manifests-4gg4dhgm2h
---
apiVersion: v1
data:
  manifest_globals.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:organization::invites
    rules:
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:organization::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:organization::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:project::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
      name: dashboard.presslabs.com:project::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        dashboard.presslabs.com/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:project::prometheus
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get
    ---
    apiVersion: apiregistration.k8s.io/v1beta1
    kind: APIService
    metadata:
      annotations:
        certmanager.k8s.io/inject-ca-from: ${namespace}/${name}-cert-manager-webhook-webhook-tls
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: webhook-v0.9.1
      name: v1beta1.admission.certmanager.k8s.io
    spec:
      group: admission.certmanager.k8s.io
      groupPriorityMinimum: 1000
      service:
        name: ${name}-cert-manager-webhook
        namespace: ${namespace}
      version: v1beta1
      versionPriority: 15
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: webhook-v0.9.1
      name: ${name}-cert-manager-webhook-ca
      namespace: ${namespace}
    spec:
      commonName: ca.webhook.cert-manager
      duration: 43800h
      isCA: true
      issuerRef:
        name: ${name}-cert-manager-webhook-selfsign
      secretName: ${name}-cert-manager-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: webhook-v0.9.1
      name: ${name}-cert-manager-webhook-webhook-tls
      namespace: ${namespace}
    spec:
      dnsNames:
      - ${name}-cert-manager-webhook
      - ${name}-cert-manager-webhook.${namespace}
      - ${name}-cert-manager-webhook.${namespace}.svc
      duration: 8760h
      issuerRef:
        name: ${name}-cert-manager-webhook-ca
      secretName: ${name}-cert-manager-webhook-webhook-tls
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook
      namespace: ${namespace}
    spec:
      dnsNames:
      - ${name}-dashboard-webhook
      - ${name}-dashboard-webhook.${namespace}
      - ${name}-dashboard-webhook.${namespace}.svc
      duration: 8760h
      issuerRef:
        name: ${name}-dashboard-webhook-ca
      secretName: ${name}-dashboard-webhook
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
    spec:
      commonName: ca.dashboard.presslabs.org
      duration: 43800h
      isCA: true
      issuerRef:
        name: ${name}-dashboard-webhook-ca-issuer
      secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: stack
        chart: stack-v0.5.1
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-ingress-default
    spec:
      commonName: ingress.local
      issuerRef:
        kind: ClusterIssuer
        name: ${name}-default
      secretName: ${name}-ingress-default
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: ClusterIssuer
    metadata:
      labels:
        app: stack
        chart: stack-v0.5.1
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-default
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${appUID}
    spec:
      acme:
        email: $letsEncryptEmail
        http01: {}
        privateKeySecretRef:
          name: ${name}-letsencrypt
        server: $letsEncryptServer
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: webhook-v0.9.1
      name: ${name}-cert-manager-webhook-ca
      namespace: ${namespace}
    spec:
      ca:
        secretName: ${name}-cert-manager-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: webhook-v0.9.1
      name: ${name}-cert-manager-webhook-selfsign
      namespace: ${namespace}
    spec:
      selfSigned: {}
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
    spec:
      ca:
        secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca-issuer
      namespace: ${namespace}
    spec:
      selfSigned: {}
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-apiserver-ca: "true"
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: webhook
        dashboard.presslabs.com/version: 0.0.1
        helm.sh/chart: webhook-v0.9.1
      name: ${name}-cert-manager-webhook
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${appUID}
    webhooks:
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/admission.certmanager.k8s.io/v1beta1/certificates
      failurePolicy: Fail
      name: certificates.admission.certmanager.k8s.io
      namespaceSelector:
        matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
          - "true"
        - key: name
          operator: NotIn
          values:
          - ${namespace}
      rules:
      - apiGroups:
        - certmanager.k8s.io
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - certificates
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/admission.certmanager.k8s.io/v1beta1/issuers
      failurePolicy: Fail
      name: issuers.admission.certmanager.k8s.io
      namespaceSelector:
        matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
          - "true"
        - key: name
          operator: NotIn
          values:
          - ${namespace}
      rules:
      - apiGroups:
        - certmanager.k8s.io
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - issuers
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/admission.certmanager.k8s.io/v1beta1/clusterissuers
      failurePolicy: Fail
      name: clusterissuers.admission.certmanager.k8s.io
      namespaceSelector:
        matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
          - "true"
        - key: name
          operator: NotIn
          values:
          - ${namespace}
      rules:
      - apiGroups:
        - certmanager.k8s.io
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - clusterissuers
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-ca-from: ${namespace}/${name}-dashboard-webhook-ca
      labels:
        app: dashboard
        chart: dashboard-0.1.0_master
        dashboard.presslabs.com/version: 0.0.1
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${appUID}
    webhooks:
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-organization
      failurePolicy: Fail
      name: validating-create-organization.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-project
      failurePolicy: Fail
      name: validating-create-project.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-site
      failurePolicy: Fail
      name: validating-create-site.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
      rules:
      - apiGroups:
        - wordpress.presslabs.org
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - wordpresses
kind: ConfigMap
metadata:
  name: ${name}-dash-globals-manifests-ctkc847dfk
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ${name}-dash-install-manifest
spec:
  backoffLimit: 3
  template:
    spec:
      containers:
      - args:
        - |
          # first install CRDs
          cat /data/crds/manifest_crds.yaml.gz.b64enc | base64 -d | gzip -dc | kubectl apply -f- ;
          # don't validate due to: https://github.com/jetstack/cert-manager/issues/1143
          kubectl apply --validate=false -f /data/globals/manifest_globals.yaml ;
        command:
        - /bin/sh
        - -c
        image: $kubectlImage
        name: init
        volumeMounts:
        - mountPath: /data/globals/
          name: globals-manifests
        - mountPath: /data/crds/
          name: crd-manifests
      restartPolicy: Never
      serviceAccountName: $serviceAccount
      volumes:
      - configMap:
          name: ${name}-dash-globals-manifests-ctkc847dfk
        name: globals-manifests
      - configMap:
          name: ${name}-dash-crds-manifests-4gg4dhgm2h
        name: crd-manifests
