apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
    cert-manager.io/disable-validation: "true"
  name: ${namespace}
---
apiVersion: v1
data:
  manifest_crds.yaml.gz.b64enc: |
    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
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
  name: ${name}-dash-crds-manifests-mf42259bg2
---
apiVersion: v1
data:
  manifest_globals.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:organization::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:organization::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:project::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:project::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:dashboard:superadmin
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
    - kind: Group
      name: superadmins@dashboard.presslabs.com
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:project::prometheus
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:organization::invites
    rules:
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    ---
    apiVersion: scheduling.k8s.io/v1beta1
    description: This priority class is used for Presslabs Dashboard MySQL Cluster pods.
    globalDefault: false
    kind: PriorityClass
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: presslabs-dashboard-database
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    value: 50000
    ---
    apiVersion: scheduling.k8s.io/v1beta1
    description: This priority class is used for Presslabs Dashboard Memcached pods.
    globalDefault: false
    kind: PriorityClass
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: presslabs-dashboard-memcached
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    value: 10000
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        cert-manager.io/inject-ca-from: ${namespace}/${name}-dashboard-webhook-ca
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    webhooks:
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-organization
      failurePolicy: Fail
      name: validating-create-organization.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: Exists
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-project
      failurePolicy: Fail
      name: validating-create-project.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: Exists
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-site
      failurePolicy: Fail
      name: validating-create-site.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: In
          values:
          - project
      rules:
      - apiGroups:
        - wordpress.presslabs.org
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - wordpresses
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca-issuer
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      selfSigned: {}
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      commonName: ca.dashboard.presslabs.org
      duration: 43800h
      isCA: true
      issuerRef:
        name: ${name}-dashboard-webhook-ca-issuer
      secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      ca:
        secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      dnsNames:
      - ${name}-dashboard-webhook
      - ${name}-dashboard-webhook.${namespace}
      - ${name}-dashboard-webhook.${namespace}.svc
      duration: 8760h
      issuerRef:
        name: ${name}-dashboard-webhook-ca
      secretName: ${name}-dashboard-webhook
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: ClusterIssuer
    metadata:
      labels:
        app: stack
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: stack-v0.7.0
        heritage: Tiller
        release: ${name}
      name: ${name}-default
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      acme:
        email: $letsEncryptEmail
        privateKeySecretRef:
          name: ${name}-letsencrypt
        server: $letsEncryptServer
        solvers:
        - http01:
            ingress:
              class: presslabs-stack
    ---
    apiVersion: cert-manager.io/v1alpha2
    kind: Certificate
    metadata:
      labels:
        app: stack
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: stack-v0.7.0
        heritage: Tiller
        release: ${name}
      name: ${name}-ingress-default
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      commonName: ingress.local
      issuerRef:
        kind: ClusterIssuer
        name: ${name}-default
      secretName: ${name}-ingress-default
    ---
    apiVersion: apiregistration.k8s.io/v1beta1
    kind: APIService
    metadata:
      annotations:
        cert-manager.io/inject-ca-from-secret: ${namespace}/${name}-cert-manager-webhook-tls
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        helm.sh/chart: cert-manager-v0.11.0
      name: v1beta1.webhook.cert-manager.io
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      group: webhook.cert-manager.io
      groupPriorityMinimum: 1000
      service:
        name: ${name}-cert-manager-webhook
        namespace: ${namespace}
      version: v1beta1
      versionPriority: 15
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        cert-manager.io/inject-apiserver-ca: "true"
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        helm.sh/chart: cert-manager-v0.11.0
      name: ${name}-cert-manager-webhook
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    webhooks:
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/webhook.cert-manager.io/v1beta1/validations
      failurePolicy: Fail
      name: webhook.cert-manager.io
      namespaceSelector:
        matchExpressions:
        - key: cert-manager.io/disable-validation
          operator: NotIn
          values:
          - "true"
        - key: name
          operator: NotIn
          values:
          - ${namespace}
      rules:
      - apiGroups:
        - cert-manager.io
        apiVersions:
        - v1alpha2
        operations:
        - CREATE
        - UPDATE
        resources:
        - certificates
        - issuers
        - clusterissuers
        - certificaterequests
      sideEffects: None
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: MutatingWebhookConfiguration
    metadata:
      annotations:
        cert-manager.io/inject-apiserver-ca: "true"
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        helm.sh/chart: cert-manager-v0.11.0
      name: ${name}-cert-manager-webhook
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    webhooks:
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/webhook.cert-manager.io/v1beta1/mutations
      failurePolicy: Fail
      name: webhook.cert-manager.io
      rules:
      - apiGroups:
        - cert-manager.io
        apiVersions:
        - v1alpha2
        operations:
        - CREATE
        - UPDATE
        resources:
        - certificates
        - issuers
        - clusterissuers
        - orders
        - challenges
        - certificaterequests
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
  name: ${name}-dash-globals-manifests-2htd946h42
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
  name: ${name}-dash-install-manifests
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
    spec:
      containers:
      - args:
        - |
          # first install CRDs
          cat /data/crds/manifest_crds.yaml.gz.b64enc | base64 -d | gzip -dc | kubectl apply -f- --validate=false ;


          # patch with application UID and create resources
          # don't validate due to: https://github.com/jetstack/cert-manager/issues/1143
          APP_UID=$(kubectl get applications.app.k8s.io ${name} -o jsonpath --template '{.metadata.uid}') ;
          echo "\n++ Patching resources with owner reference: $name ($APP_UID)" ;
          cat /data/globals/manifest_globals.yaml | env -i "APPLICATION_UID=$APP_UID" envsubst | kubectl apply -f- --validate=false ;
        command:
        - /bin/sh
        - -c
        image: $kubectlImage
        name: init
        volumeMounts:
        - mountPath: /data/globals/
          name: globals-manifests
        - mountPath: /data/crds/
          name: crd-manifests
      restartPolicy: Never
      serviceAccountName: $serviceAccount
      volumes:
      - configMap:
          name: ${name}-dash-globals-manifests-2htd946h42
        name: globals-manifests
      - configMap:
          name: ${name}-dash-crds-manifests-mf42259bg2
        name: crd-manifests
