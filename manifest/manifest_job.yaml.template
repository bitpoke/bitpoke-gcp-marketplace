apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
    certmanager.k8s.io/disable-validation: "true"
  name: ${namespace}
---
apiVersion: v1
data:
  manifest_crds.yaml.gz.b64enc: |
    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
    B5w6NdN8517IPuZo7+nF/w8msp5UtHMBAA==
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
  name: ${name}-dash-crds-manifests-hb7gk852m4
---
apiVersion: v1
data:
  manifest_globals.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:organization::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:organization::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - projects
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - accountbindings
      verbs:
      - get
      - list
      - watch
      - create
      - delete
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:project::member
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:project::owner
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - ""
      resources:
      - namespaces
      - events
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
    - apiGroups:
      - wordpress.presslabs.org
      resources:
      - wordpresses
      verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: dashboard.presslabs.com:dashboard:superadmin
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
    - kind: Group
      name: superadmins@dashboard.presslabs.com
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:project::prometheus
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - services
      - endpoints
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        rbac.dashboard.presslabs.com/aggregate-to-controller: "true"
      name: dashboard.presslabs.com:organization::invites
    rules:
    - apiGroups:
      - dashboard.presslabs.com
      resources:
      - invites
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    ---
    apiVersion: scheduling.k8s.io/v1beta1
    description: This priority class is used for Presslabs Dashboard MySQL Cluster pods.
    globalDefault: false
    kind: PriorityClass
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: presslabs-dashboard-database
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    value: 50000
    ---
    apiVersion: scheduling.k8s.io/v1beta1
    description: This priority class is used for Presslabs Dashboard Memcached pods.
    globalDefault: false
    kind: PriorityClass
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
      name: presslabs-dashboard-memcached
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    value: 10000
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-ca-from: ${namespace}/${name}-dashboard-webhook-ca
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    webhooks:
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-organization
      failurePolicy: Fail
      name: validating-create-organization.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: Exists
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-project
      failurePolicy: Fail
      name: validating-create-project.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: Exists
      rules:
      - apiGroups:
        - ""
        apiVersions:
        - v1
        operations:
        - CREATE
        - UPDATE
        resources:
        - namespaces
    - clientConfig:
        service:
          name: ${name}-dashboard-webhook
          namespace: ${namespace}
          path: /validating-create-site
      failurePolicy: Fail
      name: validating-create-site.presslabs.com
      namespaceSelector:
        matchExpressions:
        - key: control-plane
          operator: DoesNotExist
        - key: presslabs.com/kind
          operator: In
          values:
          - project
      rules:
      - apiGroups:
        - wordpress.presslabs.org
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - wordpresses
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca-issuer
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      selfSigned: {}
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      commonName: ca.dashboard.presslabs.org
      duration: 43800h
      isCA: true
      issuerRef:
        name: ${name}-dashboard-webhook-ca-issuer
      secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Issuer
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook-ca
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      ca:
        secretName: ${name}-dashboard-webhook-ca
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: dashboard
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: dashboard-0.1.0_master
        heritage: Tiller
        release: ${name}
      name: ${name}-dashboard-webhook
      namespace: ${namespace}
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      dnsNames:
      - ${name}-dashboard-webhook
      - ${name}-dashboard-webhook.${namespace}
      - ${name}-dashboard-webhook.${namespace}.svc
      duration: 8760h
      issuerRef:
        name: ${name}-dashboard-webhook-ca
      secretName: ${name}-dashboard-webhook
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: ClusterIssuer
    metadata:
      labels:
        app: stack
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: stack-v0.6.2
        heritage: Tiller
        release: ${name}
      name: ${name}-default
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      acme:
        email: $letsEncryptEmail
        http01: {}
        privateKeySecretRef:
          name: ${name}-letsencrypt
        server: $letsEncryptServer
    ---
    apiVersion: certmanager.k8s.io/v1alpha1
    kind: Certificate
    metadata:
      labels:
        app: stack
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        chart: stack-v0.6.2
        heritage: Tiller
        release: ${name}
      name: ${name}-ingress-default
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      commonName: ingress.local
      issuerRef:
        kind: ClusterIssuer
        name: ${name}-default
      secretName: ${name}-ingress-default
    ---
    apiVersion: apiregistration.k8s.io/v1beta1
    kind: APIService
    metadata:
      annotations:
        certmanager.k8s.io/inject-ca-from-secret: ${namespace}/${name}-cert-manager-webhook-tls
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        helm.sh/chart: cert-manager-v0.10.1
      name: v1beta1.webhook.certmanager.k8s.io
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    spec:
      group: webhook.certmanager.k8s.io
      groupPriorityMinimum: 1000
      service:
        name: ${name}-cert-manager-webhook
        namespace: ${namespace}
      version: v1beta1
      versionPriority: 15
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-apiserver-ca: "true"
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        helm.sh/chart: cert-manager-v0.10.1
      name: ${name}-cert-manager-webhook
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    webhooks:
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/webhook.certmanager.k8s.io/v1beta1/validations
      failurePolicy: Fail
      name: webhook.certmanager.k8s.io
      namespaceSelector:
        matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
          - "true"
        - key: name
          operator: NotIn
          values:
          - ${namespace}
      rules:
      - apiGroups:
        - certmanager.k8s.io
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - certificates
        - issuers
        - clusterissuers
        - certificaterequests
      sideEffects: None
    ---
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: MutatingWebhookConfiguration
    metadata:
      annotations:
        certmanager.k8s.io/inject-apiserver-ca: "true"
      labels:
        app: webhook
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
        helm.sh/chart: cert-manager-v0.10.1
      name: ${name}-cert-manager-webhook
      ownerReferences:
      - apiVersion: app.k8s.io/v1beta1
        kind: Application
        name: ${name}
        uid: ${APPLICATION_UID}
    webhooks:
    - clientConfig:
        service:
          name: kubernetes
          namespace: default
          path: /apis/webhook.certmanager.k8s.io/v1beta1/mutations
      failurePolicy: Fail
      name: webhook.certmanager.k8s.io
      rules:
      - apiGroups:
        - certmanager.k8s.io
        apiVersions:
        - v1alpha1
        operations:
        - CREATE
        - UPDATE
        resources:
        - certificates
        - issuers
        - clusterissuers
        - orders
        - challenges
        - certificaterequests
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
  name: ${name}-dash-globals-manifests-t98ttk97mt
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/instance: ${name}
    app.kubernetes.io/name: presslabs-dashboard
    app.kubernetes.io/version: 0.0.1
  name: ${name}-dash-install-manifests
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ${name}
        app.kubernetes.io/name: presslabs-dashboard
        app.kubernetes.io/version: 0.0.1
    spec:
      containers:
      - args:
        - |
          # first install CRDs
          cat /data/crds/manifest_crds.yaml.gz.b64enc | base64 -d | gzip -dc | kubectl apply -f- ;


          # patch with application UID and create resources
          # don't validate due to: https://github.com/jetstack/cert-manager/issues/1143
          APP_UID=$(kubectl get applications.app.k8s.io ${name} -o jsonpath --template '{.metadata.uid}') ;
          echo "\n++ Patching resources with owner reference: $name ($APP_UID)" ;
          cat /data/globals/manifest_globals.yaml | env -i "APPLICATION_UID=$APP_UID" envsubst | kubectl apply -f- --validate=false ;
        command:
        - /bin/sh
        - -c
        image: $kubectlImage
        name: init
        volumeMounts:
        - mountPath: /data/globals/
          name: globals-manifests
        - mountPath: /data/crds/
          name: crd-manifests
      restartPolicy: Never
      serviceAccountName: $serviceAccount
      volumes:
      - configMap:
          name: ${name}-dash-globals-manifests-t98ttk97mt
        name: globals-manifests
      - configMap:
          name: ${name}-dash-crds-manifests-hb7gk852m4
        name: crd-manifests
